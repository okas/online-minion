@page "/payment-specs"
@using OnlineMinion.SPA.Blazor.CurrencyInfo.ViewModels
@using OnlineMinion.SPA.Blazor.ViewModels
@using OnlineMinion.SPA.Blazor.ViewModels.PaymentSpec
@using OnlineMinion.Application.Contracts.PaymentSpecShared.Requests
@using OnlineMinion.Application.Contracts.PaymentSpecShared.Responses
@inherits BaseCRUDPage<PaymentSpecResp, PaymentSpecResp, BaseUpsertPaymentSpecReqData>

@code
{
  protected override RenderFragment RenderEditorComponent(
    BaseUpsertPaymentSpecReqData editVM,
    IEditorMetadata<PaymentSpecResp>? metadata) =>
      @<CascadingValue IsFixed="@true" Value="@CT">
        <PaymentSpecCashEditor
            CurrencyInfoVMs="_currencyCodes"
            Metadata="@((UpdatePaymentSpecEditorMetadata?)metadata)"
            Model="@editVM"
            OnCancel="@CloseEditorDialog"
            OnSubmit="@OnUpsertSubmitHandlerAsync"
            @ref="@_editorRef"/>
      </CascadingValue>;

  private static class Str
  {
    public const string PageTitle = "Payment Specs";
    public const string MainHeading = "Payment Specifications (all)";
    public const string MainDescription = "Manage all Payment Specifications";
    public const string Name = nameof(PaymentSpecResp.Name);
    public const string Type = nameof(PaymentSpecResp.Type);
    public const string CurrencyCode = nameof(PaymentSpecResp.CurrencyCode);
    public const string CurrencyCodeField = "Currency";
    public const string Tags = nameof(PaymentSpecResp.Tags);
    public const string IBAN = nameof(PaymentSpecBankResp.IBAN);
    public const string IsFiat = "Is Fiat?";
    public const string ExchangeName = "Exchange name";
  }
}

<AppPageTitle Text="@Str.PageTitle"/>

<main>
  <RadzenText class="rz-mt-4" Text="@Str.MainHeading" TextStyle="TextStyle.H3"/>
  <RadzenText Text="@Str.MainDescription"/>
  <RadzenDataGridWrapper
      AddClick="@OnAddHandler"
      Data="@ViewModels"
      DeleteClick="@OnDeleteHandlerAsync"
      EditClick="@OnEditHandler"
      ExpandMode="@DataGridExpandMode.Single"
      LoadData="@OnLoadDataHandlerAsync"
      Page="@PagerChangeHandler"
      PageSizeOptions="@PageSizeOptions"
      @ref="@GridWrapperRef"
      RowExpand="@WrappedGridRowExpandHandler"
      RowRender="@WrappedGridRowRenderHandler"
      TItem="PaymentSpecResp"
      TotalItemsCount="@TotalItemsCount">
    <Template>
      <RadzenCard class="rz-pb-3 rz-pt-1 rz-px-2">
        <RadzenRow AlignItems="@AlignItems.Center" JustifyContent="@JustifyContent.SpaceEvenly" RowGap="1em">
          @switch (_cachedPaymentSpecs.Find(x => x.Id == context.Id))
          {
            case PaymentSpecBankResp bank:
              <RadzenColumn SizeSM="4">
                <RadzenText class="rz-display-flex rz-mt-2 rz-my-0" Text="@Str.IBAN" TextStyle="TextStyle.Overline"/>
                <RadzenText Text="@bank.IBAN"/>
              </RadzenColumn>
              break;

            case PaymentSpecCryptoResp cash:
              <RadzenColumn SizeSM="4">
                <RadzenText class="rz-display-flex rz-mt-2 rz-my-0" Text="@Str.ExchangeName" TextStyle="TextStyle.Overline"/>
                <RadzenText Text="@cash.ExchangeName"/>
              </RadzenColumn>
              <RadzenColumn SizeSM="4">
                <RadzenText class="rz-display-flex rz-mt-2 rz-my-0" Text="@Str.IsFiat" TextStyle="TextStyle.Overline"/>
                <RadzenCheckBox class="rz-mt-4" ReadOnly Value="@cash.IsFiat"/>
              </RadzenColumn>
              break;

            default:
              <RadzenColumn SizeSM="4">
                <RadzenIcon Icon="refresh" IconStyle="IconStyle.Info" Style="animation: rotation 700ms linear infinite"/>
              </RadzenColumn>
              break;
          }
        </RadzenRow>
      </RadzenCard>
    </Template>
    <Columns>
      <RadzenDataGridColumn
          Filterable
          Groupable="@false"
          Property="@Str.Type"
          Sortable
          TItem="PaymentSpecResp"
          Title="@Str.Type"
          Width="150px"/>
      <RadzenDataGridColumn Property="@Str.Name" TItem="PaymentSpecResp" Title="@Str.Name"/>
      <RadzenDataGridColumn Property="@Str.CurrencyCode" TItem="PaymentSpecResp" Title="@Str.CurrencyCodeField">
        <Template>
          @_currencyCodes.SymbolizeCurrency(context.CurrencyCode)
        </Template>
      </RadzenDataGridColumn>
      <RadzenDataGridColumn Property="@Str.Tags" TItem="PaymentSpecResp" Title="@Str.Tags"/>
    </Columns>
  </RadzenDataGridWrapper>
</main>
