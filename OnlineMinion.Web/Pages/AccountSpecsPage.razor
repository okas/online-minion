@page "/account-specs"
@using OnlineMinion.Contracts.Responses
@using OnlineMinion.Contracts

@code
{
  private RenderFragment RenderEditorComponent() =>
    @<CascadingValue IsFixed="@true" Value="@CT">
      <AccountSpecsEditor
          Model="@_modelUpsert"
          OnCancel="@CloseEditorDialog"
          OnSubmit="@OnUpsertSubmitHandler"
          @ref="@_editorRef"/>
    </CascadingValue>;

  private static class Str
  {
    public const string PageTitle = "Account Specs";
    public const string MainHeading = "Account Specifications";
    public const string MainDescription = "Manage Account Specifications";
    public const string Name = nameof(AccountSpecResp.Name);
    public const string Group = nameof(AccountSpecResp.Group);
    public const string Description = nameof(AccountSpecResp.Description);
  }

}

<AppPageTitle Text="@Str.PageTitle"/>

<RadzenText class="rz-mt-4" Text="@Str.MainHeading" TextStyle="TextStyle.H3"/>
<RadzenText Text="@Str.MainDescription"/>

<RadzenText class="rz-color-series-3">
  // TODO: Buttons to reset filters and sorting and to refresh the data.
</RadzenText>

@* `Data="@_vm.AsODataEnumerable()/.ToList()"`: This seems to work better with LoadData event. *@
<RadzenDataGrid
    AllowFiltering
    AllowGrouping
    AllowPaging
    AllowSorting
    class="rz-mt-4"
    Count="@_totalItemsCount"
    Data="@_vm.ToList()"
    Density="@Density.Compact"
    FilterMode="@FilterMode.SimpleWithMenu"
    HideGroupedColumn
    IsLoading="@SC.IsBusy"
    LoadData="@OnLoadDataHandler"
    Page="@PagerChangeHandler"
    PagerPosition="@PagerPosition.Top"
    PageSize="@PagingMetaInfo.DefaultSize"
    PageSizeOptions="@_pageSizeOptions"
    @ref="@_dataGridRef"
    ShowPagingSummary>
  <Columns>
    <RadzenDataGridColumn Property="@Str.Name" TItem="AccountSpecResp" Title="@Str.Name"/>
    <RadzenDataGridColumn Property="@Str.Group" TItem="AccountSpecResp" Title="@Str.Group"/>
    <RadzenDataGridColumn Property="@Str.Description" TItem="AccountSpecResp" Title="@Str.Description"/>
    <RadzenDataGridColumn Filterable="@false" Groupable="@false" Sortable="@false" TextAlign="@TextAlign.Center" TItem="AccountSpecResp" Width="100px">
      <HeaderTemplate>
        <div class="rz-px-2">
          <RadzenButton
              ButtonStyle="@ButtonStyle.Info"
              Click="@OnAddHandler"
              Icon="add"
              Shade="@Shade.Lighter"
              Variant="@Variant.Filled"/>
        </div>
      </HeaderTemplate>
      <Template Context="m">
        <RadzenButton
            ButtonStyle="@ButtonStyle.Warning"
            class="rz-mr-1"
            Click="@(_ => OnEditHandler(m))"
            Icon="edit"
            Shade="@Shade.Lighter"
            Variant="@Variant.Outlined"/>
        <RadzenButton
            ButtonStyle="@ButtonStyle.Danger"
            class="rz-ml-1"
            Click="@(_ => OnDeleteHandler(m))"
            Icon="delete_forever"
            Shade="@Shade.Lighter"
            Variant="@Variant.Outlined"/>
      </Template>
    </RadzenDataGridColumn>
  </Columns>
</RadzenDataGrid>
