@page "/account-specs"
@using OnlineMinion.Contracts.Responses

@code
{
  private static class Str
  {
    public const string PageTitle = "Account Specs";
    public const string MainHeading = "Account Specifications";
    public const string MainDescription = "Manage Account Specifications";
    public const string NoContent = "No content to page | loading ...";
    public const string Loading = "Loading ...";
    public const string NoItems = "No items.";
    public const string DeleteBtn = "❌";
    public const string EditBtn = "✏️";
    public const string Name = nameof(AccountSpecResp.Name);
    public const string Group = nameof(AccountSpecResp.Group);
    public const string Description = nameof(AccountSpecResp.Description);
  }

}

<AppPageTitle Text="@Str.PageTitle"/>

<RadzenText Text="@Str.MainHeading" TextStyle="TextStyle.H3"/>
<RadzenText Text="@Str.MainDescription"/>

@if (_paging is null)
{
  <RadzenText Text="@Str.NoContent"/>
}
else
{
  <ToolbarForTabular OnAdd="@OnAddHandler">
    <Pager OnPageChanged="@PageChanged" OnPageSizeChanged="@PageSizeChanged" PagingMetaInfo="@_paging.Value"/>
  </ToolbarForTabular>
}

@if (_vm is null)
{
  <RadzenText Style="font-style: italic" Text="@Str.Loading"/>
}
else if (!_vm.Any())
{
  <RadzenText Style="font-style: italic" Text="@Str.NoItems"/>
}
else
{
  <table class="table">
    <thead>
    <tr>
      <th>@Str.Name</th>
      <th>@Str.Group</th>
      <th>@Str.Description</th>
      <th></th>
    </tr>
    </thead>
    <tbody style="overflow-y:scroll" tabindex="-1">
    <Virtualize Context="m" Items="_vm">
      <tr @key=m.Id>
        <td>@m.Name</td>
        <td>@m.Group</td>
        <td>@m.Description</td>
        <td>
          <button class="btn btn-outline-danger" @onclick="@(() => OnDeleteHandler(m.Id))">@Str.DeleteBtn</button>
          <button class="btn btn-outline-warning" @onclick="@(() => OnEditHandler(m.Id))">@Str.EditBtn</button>
        </td>
      </tr>
    </Virtualize>
    </tbody>
  </table>
}

@*TODO: Set focus to modal, if it is opened.*@
<CascadingValue IsFixed="@true" Value="@CT">
  <AccountSpecsUpsertEditor IsSubmitting="@_isSubmitting" Model="@_modelUpsert" OnSubmit="@OnUpsertSubmitHandler" @ref="@_upsertEditorRef"/>
</CascadingValue>

<AccountSpecsDeleteDialog Model="@_modelDelete" OnConfirm="OnDeleteConfirmHandler" @ref="@_deleteDialogRef"/>
